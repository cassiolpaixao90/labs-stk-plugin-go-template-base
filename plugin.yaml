schema-version: v2
kind: plugin
metadata:
  name: go-template-base
  display-name: go-template-base
  description: golang template base
  version: 2.0.9
  picture: plugin.png

spec:
  type: app
  compatibility:
    - golang
  about: docs/about.md
  implementation: docs/implementation.md
  release-notes: docs/release-notes-0.0.1.md
  requirements: docs/requirements.md
  single-use: False
  repository: https://github.com/cassiolpaixao90/labs-stk-go/tree/main
  technologies: # Ref: https://docs.stackspot.com/content-creator/studio/yaml-files/plugin-yaml/#technologies
    - Api
  stk-projects-only: false
  inputs:
    - label: Nome do projeto
      name: project_name
      type: text
      required: true
      help: 'Inform your project name'
      global: true

    - label: Golang Version
      name: version_golang
      type: select
      items:
        - '1.21'
        - '1.20'
        - '1.19'
        - '1.18'

    - label: Nome do recurso
      name: resource
      type: text
      required: true
      help: 'Inform your resource name'
      global: true

    - label: Porta da aplicacao
      name: port
      type: text
      required: true
      help: 'Inform your port'
      global: true

    - label: Criar arquivo openapi ?
      name: can_create_openapi
      type: bool
      required: true
      default: true

    - label: Criar Dockerfile ?
      name: can_create_dockerfile
      type: bool
      required: true
      default: true

    - label: CI Options
      name: ci_option
      type: select
      required: true
      default: "Nenhum"
      items:
        - "1-Github Actions"
        - "2-Gitlab"
        - "3-Nenhum"

  computed-inputs:
    capitalize_resource: "{{resource|capitalize}}"
    gitlab_ci_folder_name: "{{resource}}_lib"
    custom_get_resource: "{{custom_default_resource}}s"
    #ci_option_type: "{{ci_option|regex_replace('([a-zA-Z- ])\w+', '')}}"

  hooks:
    - type: run
      trigger: after-render
      commands:
        - go mod tidy
        - echo project generated
      working-dir: "app"

    - type: run
      trigger: after-render
      working-dir: "app"
      commands:
        - rm -r api
      condition:
        variable: can_create_openapi
        operator: "=="
        value: false

    - type: run
      trigger: after-render
      working-dir: "app"
      commands:
        - rm Dockerfile
      condition:
        variable: can_create_dockerfile
        operator: "=="
        value: false

    - type: run
      trigger: after-render
      working-dir: "."
      commands:
        - mkdir -p cd .github/workflows
        - touch .github/workflows/ci.yaml
      condition:
        #variable: ci_option_type
        variable: ci_option
        operator: "=="
        value: "1-Github Actions"

    - type: run
      trigger: after-render
      working-dir: "."
      commands:
        - touch go.gitlab-ci.yaml
      condition:
        #variable: ci_option_type
        variable: ci_option
        operator: "=="
        value: "2-Gitlab"

    - type: edit
      trigger: after-render
      path: ".github/workflows/ci.yaml"
      changes:
        - insert:
            line: 0
            snippet: snippet/github_action_content.txt
            when:
              not-exists-snippet: snippet/github_action_content.txt
      condition:
        #variable: ci_option_type
        variable: ci_option
        operator: "=="
        value: "1-Github Actions"

    - type: edit
      trigger: after-render
      path: "go.gitlab-ci.yaml"
      changes:
        - insert:
            line: 0
            snippet: snippet/gitlab_content.txt
            when:
              not-exists-snippet: snippet/gitlab_content.txt
      condition:
        #variable: ci_option_type
        variable: ci_option
        operator: "=="
        value: "2-Gitlab"